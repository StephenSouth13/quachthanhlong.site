"use client"

import type React from "react"
import { createContext, useContext, useState, useEffect } from "react"

type Language = "en" | "vi"

interface LanguageContextType {
  language: Language
  setLanguage: (lang: Language) => void
  t: (key: string) => string
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

const translations = {
  en: {
    "nav.home": "Home",
    "nav.about": "About",
    "nav.projects": "Projects",
    "nav.games": "Games",
    "nav.cv": "CV",
    "nav.blog": "Blog",
    "nav.contact": "Contact",
    "hero.name": "Qu√°ch Th√†nh Long",
    "hero.tagline": "Investor | Web/Game Developer | Business Analyst",
    "hero.description":
      "CTO-level talent passionate about technology, economics, and creating innovative solutions that bridge the gap between vision and reality.",
    "hero.cta.projects": "üöÄ View Projects",
    "hero.cta.contact": "üì© Contact Me",
    "about.title": "About Me",
    "about.quote": "Tech gives me the tools, economics gives me the vision.",
    "about.description":
      "Experienced developer and analyst with expertise in full-stack development, game creation, and strategic business analysis.",
    "projects.title": "Featured Projects",
    "projects.viewAll": "View All Projects",
    "games.title": "Game Development",
    "games.viewAll": "View All Games",
    "blog.title": "Latest Insights",
    "blog.viewAll": "View All Posts",
    "chatbot.greeting": "Hello! I'm the digital version of Qu√°ch Th√†nh Long. How can I help you?",
    "audio.toggle": "Toggle Background Music",
  },
  vi: {
    "nav.home": "Trang Ch·ªß",
    "nav.about": "Gi·ªõi Thi·ªáu",
    "nav.projects": "D·ª± √Ån",
    "nav.games": "Game",
    "nav.cv": "CV",
    "nav.blog": "Blog",
    "nav.contact": "Li√™n H·ªá",
    "hero.name": "Qu√°ch Th√†nh Long",
    "hero.tagline": "Nh√† ƒê·∫ßu T∆∞ | L·∫≠p Tr√¨nh Vi√™n | Chuy√™n Gia Ph√¢n T√≠ch",
    "hero.description":
      "Chuy√™n gia c√¥ng ngh·ªá c·∫•p CTO v·ªõi ƒëam m√™ v·ªÅ c√¥ng ngh·ªá, kinh t·∫ø v√† t·∫°o ra nh·ªØng gi·∫£i ph√°p s√°ng t·∫°o k·∫øt n·ªëi t·∫ßm nh√¨n v·ªõi th·ª±c t·∫ø.",
    "hero.cta.projects": "üöÄ Xem D·ª± √Ån",
    "hero.cta.contact": "üì© Li√™n H·ªá",
    "about.title": "Gi·ªõi Thi·ªáu",
    "about.quote": "C√¥ng ngh·ªá cho t√¥i c√¥ng c·ª•, kinh t·∫ø cho t√¥i t·∫ßm nh√¨n.",
    "about.description":
      "L·∫≠p tr√¨nh vi√™n v√† chuy√™n gia ph√¢n t√≠ch gi√†u kinh nghi·ªám v·ªõi chuy√™n m√¥n v·ªÅ ph√°t tri·ªÉn full-stack, t·∫°o game v√† ph√¢n t√≠ch kinh doanh chi·∫øn l∆∞·ª£c.",
    "projects.title": "D·ª± √Ån N·ªïi B·∫≠t",
    "projects.viewAll": "Xem T·∫•t C·∫£ D·ª± √Ån",
    "games.title": "Ph√°t Tri·ªÉn Game",
    "games.viewAll": "Xem T·∫•t C·∫£ Game",
    "blog.title": "Chia S·∫ª M·ªõi Nh·∫•t",
    "blog.viewAll": "Xem T·∫•t C·∫£ B√†i Vi·∫øt",
    "chatbot.greeting": "Xin ch√†o! T√¥i l√† b·∫£n s·ªë h√≥a c·ªßa Qu√°ch Th√†nh Long. B·∫°n c·∫ßn gi√∫p g√¨?",
    "audio.toggle": "B·∫≠t/T·∫Øt Nh·∫°c N·ªÅn",
  },
}

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const [language, setLanguage] = useState<Language>("en")

  useEffect(() => {
    const saved = localStorage.getItem("language") as Language
    if (saved && (saved === "en" || saved === "vi")) {
      setLanguage(saved)
    }
  }, [])

  const handleSetLanguage = (lang: Language) => {
    setLanguage(lang)
    localStorage.setItem("language", lang)
  }

  const t = (key: string): string => {
    return translations[language][key as keyof (typeof translations)[typeof language]] || key
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage: handleSetLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  )
}

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (context === undefined) {
    throw new Error("useLanguage must be used within a LanguageProvider")
  }
  return context
}
